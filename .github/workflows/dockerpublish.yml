name: Docker Publish

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

  schedule:
      # runs nightly build at 5AM
      - cron:  '00 09 * * *'

env:
  IMAGE_NAME: wlan-cloud-ui
  DOCKER_REPO: tip-tip-wlan-cloud-docker-repo.jfrog.io

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build --build-arg NPM_TOKEN=${{secrets.NPM_REPO_AUTH_TOKEN}}
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile --build-arg NPM_TOKEN=${{secrets.NPM_REPO_AUTH_TOKEN}}
          fi
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Adding property file with component version and commit hash 
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          TIMESTAMP=$(date +'%Y-%m-%d')

          echo date=$TIMESTAMP > app/commit.properties
          echo commitId=$GITHUB_SHA >> app/commit.properties
          echo projectVersion=$VERSION>> app/commit.properties

      - name: Build image
        run: docker build . -f Dockerfile -t image --build-arg NPM_TOKEN=${{secrets.NPM_REPO_AUTH_TOKEN}}

      - name: Login to Docker Hub
        env:
          DOCKER_PASSWORD: ${{ secrets.REPO_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login $DOCKER_REPO --username "build-pipeline" --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=$DOCKER_REPO/$IMAGE_NAME
          TIMESTAMP=$(date +'%Y-%m-%d')

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo TIMESTAMP=$TIMESTAMP

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
          docker tag image $IMAGE_ID:$VERSION-$TIMESTAMP
          docker push $IMAGE_ID:$VERSION-$TIMESTAMP          
